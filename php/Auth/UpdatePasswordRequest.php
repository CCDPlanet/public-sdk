<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth/service.proto

namespace Auth;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>auth.UpdatePasswordRequest</code>
 */
class UpdatePasswordRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Старый пароль
     *
     * Generated from protobuf field <code>string old = 1;</code>
     */
    protected $old = '';
    /**
     * Новый пароль
     *
     * Generated from protobuf field <code>string new = 2;</code>
     */
    protected $new = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $old
     *           Старый пароль
     *     @type string $new
     *           Новый пароль
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Auth\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Старый пароль
     *
     * Generated from protobuf field <code>string old = 1;</code>
     * @return string
     */
    public function getOld()
    {
        return $this->old;
    }

    /**
     * Старый пароль
     *
     * Generated from protobuf field <code>string old = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setOld($var)
    {
        GPBUtil::checkString($var, True);
        $this->old = $var;

        return $this;
    }

    /**
     * Новый пароль
     *
     * Generated from protobuf field <code>string new = 2;</code>
     * @return string
     */
    public function getNew()
    {
        return $this->new;
    }

    /**
     * Новый пароль
     *
     * Generated from protobuf field <code>string new = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setNew($var)
    {
        GPBUtil::checkString($var, True);
        $this->new = $var;

        return $this;
    }

}

