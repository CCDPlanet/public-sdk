<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bank/bank.proto

namespace Bank;

use UnexpectedValueException;

/**
 * Currency.
 *
 * Protobuf type <code>bank.Currency</code>
 */
class Currency
{
    /**
     * Специальное значение для перехвата неожиданных значений. НЕ ИСПОЛЬЗОВАТЬ.
     *
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>RUB = 1;</code>
     */
    const RUB = 1;
    /**
     * Специальная валюта "Донат"
     *
     * Generated from protobuf enum <code>DONATE = 2;</code>
     */
    const DONATE = 2;
    /**
     * Сумма на руках (рубли)
     *
     * Generated from protobuf enum <code>HANDS = 3;</code>
     */
    const HANDS = 3;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::RUB => 'RUB',
        self::DONATE => 'DONATE',
        self::HANDS => 'HANDS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

