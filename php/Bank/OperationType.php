<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bank/bank.proto

namespace Bank;

use UnexpectedValueException;

/**
 * OperationType тип операции в банке.
 *
 * Protobuf type <code>bank.OperationType</code>
 */
class OperationType
{
    /**
     * TYPE_UNSPECIFIED использвуется для перехвата неустановленных значений. НЕ
     * ИСПОЛЬЗОВАТЬ.
     *
     * Generated from protobuf enum <code>TYPE_UNSPECIFIED = 0;</code>
     */
    const TYPE_UNSPECIFIED = 0;
    /**
     * Доходы
     *
     * Generated from protobuf enum <code>TYPE_INCOME = 1;</code>
     */
    const TYPE_INCOME = 1;
    /**
     * Затраты
     *
     * Generated from protobuf enum <code>TYPE_EXPENSES = 2;</code>
     */
    const TYPE_EXPENSES = 2;
    /**
     * Донат
     *
     * Generated from protobuf enum <code>TYPE_DONATE = 3;</code>
     */
    const TYPE_DONATE = 3;

    private static $valueToName = [
        self::TYPE_UNSPECIFIED => 'TYPE_UNSPECIFIED',
        self::TYPE_INCOME => 'TYPE_INCOME',
        self::TYPE_EXPENSES => 'TYPE_EXPENSES',
        self::TYPE_DONATE => 'TYPE_DONATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

