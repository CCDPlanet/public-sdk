<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: garages/garages.proto

namespace Garages;

use UnexpectedValueException;

/**
 * Protobuf type <code>garages.GarageRoom</code>
 */
class GarageRoom
{
    /**
     * UNKNOWN использвуется для перехвата неустановленных значений. НЕ
     * ИСПОЛЬЗОВАТЬ.
     *
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>GARAGE_2_CAR = 1;</code>
     */
    const GARAGE_2_CAR = 1;
    /**
     * Generated from protobuf enum <code>GARAGE_6_CAR = 2;</code>
     */
    const GARAGE_6_CAR = 2;
    /**
     * Generated from protobuf enum <code>GARAGE_10_CAR = 3;</code>
     */
    const GARAGE_10_CAR = 3;
    /**
     * Generated from protobuf enum <code>IMP_DT1_02_CARGARAGE_A = 4;</code>
     */
    const IMP_DT1_02_CARGARAGE_A = 4;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::GARAGE_2_CAR => 'GARAGE_2_CAR',
        self::GARAGE_6_CAR => 'GARAGE_6_CAR',
        self::GARAGE_10_CAR => 'GARAGE_10_CAR',
        self::IMP_DT1_02_CARGARAGE_A => 'IMP_DT1_02_CARGARAGE_A',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

